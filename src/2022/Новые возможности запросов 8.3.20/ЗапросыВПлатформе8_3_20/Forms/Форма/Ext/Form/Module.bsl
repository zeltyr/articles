#Область ОбработчикиКомандФормы
 
&НаКлиенте
Процедура АрифметическиеОперации(Команда)
	
	АрифметическиеОперацииНаСервере();	

КонецПроцедуры

&НаСервере
Процедура АрифметическиеОперацииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АрифметическиеОперации.Ссылка КАК Ссылка,
	//|	Цел(АрифметическиеОперации.СоставнойТипДляАрифметическихОпераций) КАК СоставнойТипДляАрифметическихОперацийБезВыразить,
	|	Цел(ВЫРАЗИТЬ(АрифметическиеОперации.СоставнойТипДляАрифметическихОпераций КАК ЧИСЛО (10,0))) КАК ЦелСоставноеПоле,
	|	Цел(АрифметическиеОперации.Число) КАК Цел,
	//|	Цел(АрифметическиеОперации.НеЧисло) КАК ЦелНеЧисло,
	//|	Цел(NULL) КАК ЦелNULL,
	//|	Цел(Неопределено) КАК ЦелНеопределено, 
	//|	ВЫРАЗИТЬ(Exp(АрифметическиеОперации.Число) КАК ЧИСЛО(15,7)) КАК Exp,
	|	Exp(АрифметическиеОперации.Число) КАК Exp,
	|	Log(АрифметическиеОперации.Число) КАК Log,
	|	Log10(АрифметическиеОперации.Число) КАК Log10,
	|	Pow(АрифметическиеОперации.Число, 2) КАК Pow,
	|	Sqrt(АрифметическиеОперации.Число) КАК Sqrt,
	|	Окр(АрифметическиеОперации.Число, 2) КАК Окр
	|ИЗ
	|	Справочник.АрифметическиеОперации КАК АрифметическиеОперации";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Сообщение = Новый СообщениеПользователю;
	данныеСообщения = Новый Структура("ЦелСоставноеПоле, Цел, Exp, Log, Log10, Pow, Sqrt, Окр");
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(данныеСообщения, Выборка);
		Сообщение.Текст = СтрШаблон("Результат вычисления:
			| Цел (составное поле): %1,
			| Цел: %2,
			| Exp: %3,
			| Log: %4,
			| Log10: %5,
			| Pow: %6,
			| Sqrt: %7, 
			| Окр: %8", 
			данныеСообщения.ЦелСоставноеПоле,
			данныеСообщения.Цел,
			данныеСообщения.Exp,
			данныеСообщения.Log,
			данныеСообщения.Log10,
			данныеСообщения.Pow,
			данныеСообщения.Sqrt,
			данныеСообщения.Окр);		
		Сообщение.Сообщить();
		
	КонецЦикла;
	
КонецПроцедуры



&НаКлиенте
Процедура РаботаСоСтроками(Команда)
	РаботаСоСтрокамиНаСервере_Строка();
	РаботаСоСтрокамиНаСервере_ЧисловыеДанные();
	РаботаСоСтрокамиНаСервере_ОстальныеФункции();
КонецПроцедуры

&НаСервере
Процедура РаботаСоСтрокамиНаСервере_Строка()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	1 КАК Исходник,
		|	СТРОКА(1) КАК Результат
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""строка"",
		|	СТРОКА(""строка"")
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИСТИНА,
		|	СТРОКА(ИСТИНА)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДАТАВРЕМЯ(2022, 2, 2),
		|	СТРОКА(ДАТАВРЕМЯ(2022, 2, 2))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	СТРОКА(NULL)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО,
		|	СТРОКА(НЕОПРЕДЕЛЕНО)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(РаботаСоСтроками.СтрокаНеограниченнойДлины КАК СТРОКА(50)),
		|	СТРОКА(РаботаСоСтроками.СтрокаНеограниченнойДлины)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце,
		|	СТРОКА(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками";
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбойтиРезультатЗапроса(РезультатЗапроса);
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
КонецПроцедуры
 
&НаСервере
Процедура РаботаСоСтрокамиНаСервере_ЧисловыеДанные()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(РаботаСоСтроками.СтрокаНеограниченнойДлины КАК СТРОКА(50)) КАК Исходник,
		|	""ДлинаСтроки_НеогрДлина"" КАК Функция,
		|	ДлинаСтроки(РаботаСоСтроками.СтрокаНеограниченнойДлины) КАК Результат
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце,
		|	""ДлинаСтроки_ОгрДлина"" КАК Функция,
		|	ДлинаСтроки(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(РаботаСоСтроками.СтрокаНеограниченнойДлины КАК СТРОКА(50)),
		|	""СтрНайти_НеогрДлина"",
		|	СтрНайти(РаботаСоСтроками.СтрокаНеограниченнойДлины, ""Безухов"")
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце,
		|	""СтрНайти_ОгрДлина"",
		|	СтрНайти(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце, ""513"")
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками";
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбойтиРезультатЗапроса(РезультатЗапроса);
	
КонецПроцедуры
 
&НаСервере
Процедура РаботаСоСтрокамиНаСервере_ОстальныеФункции()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(РаботаСоСтроками.СтрокаНеограниченнойДлины КАК СТРОКА(50)) КАК Исходник,
		|	""СокрЛ_НеогрДлина"" КАК Функция,
		|	СокрЛ(РаботаСоСтроками.СтрокаНеограниченнойДлины) КАК Результат
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце,
		|	""СокрЛ_ОгрДлина"" КАК Функция,
		|	СокрЛ(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(РаботаСоСтроками.СтрокаНеограниченнойДлины КАК СТРОКА(50)),
		|	""СокрП_НеогрДлина"",
		|	СокрП(РаботаСоСтроками.СтрокаНеограниченнойДлины)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце,
		|	""СокрП_ОгрДлина"" КАК Функция,
		|	СокрП(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(РаботаСоСтроками.СтрокаНеограниченнойДлины КАК СТРОКА(50)),
		|	""СокрЛП_НеогрДлина"",
		|	СокрЛП(РаботаСоСтроками.СтрокаНеограниченнойДлины)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце,
		|	""СокрЛП_ОгрДлина"" КАК Функция,
		|	СокрЛП(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(РаботаСоСтроками.СтрокаНеограниченнойДлины КАК СТРОКА(50)),
		|	""Лев_НеогрДлина"",
		|	ЛЕВ(РаботаСоСтроками.СтрокаНеограниченнойДлины, 5)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце,
		|	""Лев_ОгрДлина"",
		|	ЛЕВ(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце, 5)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(РаботаСоСтроками.СтрокаНеограниченнойДлины КАК СТРОКА(50)),
		|	""Прав_НеогрДлина"",
		|	Прав(РаботаСоСтроками.СтрокаНеограниченнойДлины, 5)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце,
		|	""Прав_ОгрДлина"",
		|	Прав(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце, 5)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(РаботаСоСтроками.СтрокаНеограниченнойДлины КАК СТРОКА(50)),
		|	""ВРег_НеогрДлина"",
		|	ВРег(РаботаСоСтроками.СтрокаНеограниченнойДлины)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце,
		|	""ВРег_ОгрДлина"",
		|	ВРег(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(РаботаСоСтроками.СтрокаНеограниченнойДлины КАК СТРОКА(50)),
		|	""НРег_НеогрДлина"",
		|	НРег(РаботаСоСтроками.СтрокаНеограниченнойДлины)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце,
		|	""НРег_ОгрДлина"",
		|	НРег(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками";
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбойтиРезультатЗапроса(РезультатЗапроса);
	
КонецПроцедуры

 
&НаСервере
Процедура РаботаСоСтроками_ПримерОбъединенияНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце КАК СтрокаСПробеламиВНачалеИКонце,
		|	""ДлинаСтроки_ОгрДлина"" КАК Функция,
		|	ДЛИНАСТРОКИ(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце) КАК Результат
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце,
		|	""СокрЛ_ОгрДлина"",
		|	СОКРЛ(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце)
		|ИЗ
		|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками";
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбойтиРезультатЗапроса(РезультатЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботаСоСтроками_ПримерОбъединения(Команда)
	РаботаСоСтроками_ПримерОбъединенияНаСервере();
КонецПроцедуры

&НаСервере
Процедура РазмерХранимыхДанныхНаСервере()

	Запрос = Новый Запрос;
	
	// Поля, приводящие к ошибке
	Запрос.Текст = 
	"ВЫБРАТЬ
	//|	РАЗМЕРХРАНИМЫХДАННЫХ(РазмерХранимыхДанных.ТаблицаРеквизитов) КАК ТаблицаРеквизитов, // в конструкторе - ошибки нет, в пользовательском - есть
	//|	РАЗМЕРХРАНИМЫХДАННЫХ(РазмерХранимыхДанных.Представление) КАК Представление, // ошибка и в конструкторе и в пользовательском режиме
	//|	РАЗМЕРХРАНИМЫХДАННЫХ(РазмерХранимыхДанных.Предопределенный) КАК Предопределенный, // ошибка в пользовательском режиме, в констукторе - ошибки нет
	|ИЗ
	|	Справочник.РазмерХранимыхДанных КАК РазмерХранимыхДанных";
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	""РХД_Ссылка"" КАК Функция,
		|	РАЗМЕРХРАНИМЫХДАННЫХ(РазмерХранимыхДанных.Ссылка) КАК Результат
		|ИЗ
		|	Справочник.РазмерХранимыхДанных КАК РазмерХранимыхДанных
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""РХД_СтрокаНеограниченнойДлины"",
		|	РАЗМЕРХРАНИМЫХДАННЫХ(РазмерХранимыхДанных.СтрокаНеограниченнойДлины)
		|ИЗ
		|	Справочник.РазмерХранимыхДанных КАК РазмерХранимыхДанных
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""РХД_ХранилищеЗначения"",
		|	РАЗМЕРХРАНИМЫХДАННЫХ(РазмерХранимыхДанных.ХранилищеЗначения)
		|ИЗ
		|	Справочник.РазмерХранимыхДанных КАК РазмерХранимыхДанных";
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбойтиРезультатЗапроса(РезультатЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерХранимыхДанных(Команда)
	РазмерХранимыхДанныхНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбойтиРезультатЗапроса(РезультатЗапроса)

	данныеСообщения = РезультатЗапроса.Выбрать();
	
	Сообщение = Новый СообщениеПользователю;
	
	ДанныеРезультата = Новый Структура("Исходник, функция, результат");
	
	Пока данныеСообщения.Следующий() Цикл
		
		ДанныеРезультата.Исходник = Неопределено;
		ДанныеРезультата.функция = Неопределено;
		ДанныеРезультата.результат = Неопределено;
		
		ЗаполнитьЗначенияСвойств(ДанныеРезультата, данныеСообщения);
		
		Сообщение.Текст = СтрШаблон("Результат вычисления:
		| Источник (тип): %1, функция: %2, результат (тип): %3, результат: %4", 
		ТипЗнч(ДанныеРезультата.Исходник),
		ДанныеРезультата.Функция,
		ТипЗнч(ДанныеРезультата.Результат),
		ДанныеРезультата.Результат);		

		Сообщение.Сообщить();

	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
КонецПроцедуры

&НаСервере
Процедура ЭкспериментыПоКомментариюКСтатьеНаСервере()
	
	//А что там с дополнительными параметрами некоторых функций - например можно вызвать Лев(ПолеСтрока, ПолеЧисло)? 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце  КАК Исходник,
	|	""Лев_ОгрДлина""  КАК Функция,
	|	ЛЕВ(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце, РаботаСоСтроками.ЧислоСимволов)  КАК Результат
	|ИЗ
	|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками";
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбойтиРезультатЗапроса(РезультатЗапроса);	
	
	// И с вложением функций СокрЛП(СтрЗаменить(ПолеСтрока, Лев(ПолеСтрока,СтрНайти(ПолеСтрока,"-")-1)+, 
	// Прав(ПолеСтрока,СтрНайти(ПолеСтрока,"-"),
	// ДлинаСтроки(ПолеСтрока) - Лев(ПолеСтрока,СтрНайти(ПолеСтрока,"-"))))
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце КАК Исходник,
	|	""Лев_ОгрДлина"" КАК Функция,
	|	СОКРЛП(СТРЗАМЕНИТЬ(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце, ЛЕВ(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце, СТРНАЙТИ(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце, ""5"") - 1), ""привет"")) КАК Результат
	|ИЗ
	|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками";
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбойтиРезультатЗапроса(РезультатЗапроса);	

	// И как нынче всё это сочетается со старой функцией ПОДСТРОКА?[
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце КАК Исходник,
	|	""Лев_ОгрДлина"" КАК Функция,
	|	ПОДСТРОКА(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце, 3, 2) + СОКРЛП(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце) КАК Результат
	//|	ПОДСТРОКА(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце, 3, 2) + ЛЕВ(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце, 5) КАК Результат
	|ИЗ
	|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками";
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбойтиРезультатЗапроса(РезультатЗапроса);	
	
	// И индексация символов по-прежнему с 1?
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце КАК Исходник,
	|	""Лев_ОгрДлина"" КАК Функция,
	|	ЛЕВ(РаботаСоСтроками.СтрокаСПробеламиВНачалеИКонце, 1) КАК Результат
	|ИЗ
	|	Справочник.РаботаСоСтроками КАК РаботаСоСтроками";
	
	РезультатЗапроса = Запрос.Выполнить();
	ОбойтиРезультатЗапроса(РезультатЗапроса);	
КонецПроцедуры

&НаКлиенте
Процедура ЭкспериментыПоКомментариюКСтатье(Команда)
	ЭкспериментыПоКомментариюКСтатьеНаСервере();
КонецПроцедуры

#КонецОбласти

